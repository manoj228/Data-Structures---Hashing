//Time complexity : O(n)
#include <bits/stdc++.h>
using namespace std;

int checkContiguous(int a[],int n)
{
    unordered_set<int> us;
    
    for(int i=0;i<n;i++)
    us.insert(a[i]);
    
    int cnt = 1; 
    int curr = a[0] - 1;
    while(us.find(curr) != us.end())
    {
        cnt++;
        curr--;
    }
    
    curr = a[0] + 1;
    while(us.find(curr) != us.end())
    {
        cnt++;
        curr++;
    }
    
    return (cnt == us.size());
}

int main()
{
    int a[] = { 5, 2, 3, 6, 4, 4, 6, 6 }; 
    int n = sizeof(a)/sizeof(a[0]);
    
    if(checkContiguous(a,n))
    printf("Yes");
    else
    printf("No");

    return 0;
}
