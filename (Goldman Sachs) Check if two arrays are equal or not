//Time complexity : O(n)
#include <bits/stdc++.h>
using namespace std;

int checkEqual(int a[],int b[],int m,int n)
{
    if(n!=m) return 0;
    
    unordered_map<int ,int> s;
    
    //count frequency
    for(int i=0;i<m;i++)
    s[a[i]]++;
    
    for(int i=0;i<n;i++)
    {
        //element in b , but not in a 
        if(s.find(b[i]) == s.end())
        return 0;
        
        //if element occurs more times in b than in a 
        if(s[b[i]] == 0)
        return 0;
        
        s[b[i]]--;
    }
    return 1;
}
int main()
{
    int a[] = { 3, 5, 2, 5, 2 }; 
    int b[] = { 2, 3, 5, 5, 2 }; 
    int m = sizeof(a)/sizeof(a[0]);
    int n = sizeof(b)/sizeof(b[0]);
    
    checkEqual(a,b,m,n) ? printf("Yes") : printf("No");

    return 0;
}
